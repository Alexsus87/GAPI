@model BookingEntity

@{
	ViewBag.Title = "Booking";
}

<h2>Booking</h2>

@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()

	<div class="form-horizontal">
		<h4>BookingEntity</h4>
		<hr />
		@Html.ValidationSummary(true, "", new { @class = "text-danger" })
		@Html.HiddenFor(model => model.Id)

		<div class="form-group">
			@Html.LabelFor(model => model.PickUpLocation, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.PickUpLocation, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.PickUpLocation, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.DropLocation, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.DropLocation, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.DropLocation, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.PickUpDateTime, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.PickUpDateTime, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.PickUpDateTime, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.TransferTime, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.TransferTime, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.TransferTime, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.DrivingDistance, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.DrivingDistance, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.DrivingDistance, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			<div class="col-md-offset-2 col-md-10">
				<input type="submit" value="Save" class="btn btn-default" />
			</div>
		</div>
	</div>
}

<div>
	@Html.ActionLink("Back to List", "Index")
</div>
