@model BritishCab.Models.BookingEntity

<style>
    #map {
        width: 100%;
        height: 400px;
    }
</style>

<script type="text/javascript">
	$(function() { // will trigger when the document is ready
		$('.datepicker').datepicker(); //Initialise any date pickers
	});

	$(document).ready(function() {
		jQuery('#datetimepicker').datetimepicker({ theme: 'dark' });
	});
</script>

<script type="text/javascript" src="http://maps.googleapis.com/maps/api/js?sensor=false&libraries=places"></script>

@using (Html.BeginForm("Booking", "Home",
            FormMethod.Post, new { @class = "booking-form" }))
{
    @Html.AntiForgeryToken()
    <div class="container">
        <div class="form-horizontal">
            <hr />
            <div class="row">
                <div class="col-lg-5">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.BookingEntityId)
					@Html.HiddenFor(model => model.DriverActualDepartureTime)

                    <script type="text/javascript">
                        var options = {
                            types: ['(cities)'],
                            componentRestrictions: { country: "uk" }
                        };

                        google.maps.event.addDomListener(window, 'load', function () {
                            var places = new google.maps.places.Autocomplete(document.getElementById('start'), options);
                            google.maps.event.addListener(places, 'place_changed', function () {
                                var place = places.getPlace();
                                var address = place.formatted_address;
                                var latitude = place.geometry.location.lat();
                                var longitude = place.geometry.location.lng();
                                //var mesg = "Address: " + address;
                                //mesg += "\nLatitude: " + latitude;
                                //mesg += "\nLongitude: " + longitude;
                                //alert(mesg);
                            });
                        });
                        google.maps.event.addDomListener(window, 'load', function () {
                            var places2 = new google.maps.places.Autocomplete(document.getElementById('end'), options);
                        });
                    </script>

                    <div class="form-group">
                        @Html.LabelFor(model => model.PickUpLocation, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.PickUpLocation, new { htmlAttributes = new { @class = "form-control", id = "start", required = "required" } })
                            @Html.ValidationMessageFor(model => model.PickUpLocation, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.DropLocation, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.DropLocation, new { htmlAttributes = new { @class = "form-control", id = "end", required = "required" } })
                            @Html.ValidationMessageFor(model => model.DropLocation, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.PickUpDateTime, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.PickUpDateTime, new { htmlAttributes = new { @class = "form-control", id = "datetimepicker", placeholder = "Choose pich up time", required = "required" } })
                            @Html.ValidationMessageFor(model => model.PickUpDateTime, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.TransferTime, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.TransferTime, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TransferTime, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    @*<div class="form-group">
                            @Html.LabelFor(model => model.DrivingDistance, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.DrivingDistance, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DrivingDistance, "", new { @class = "text-danger" })
                            </div>
                        </div>*@

                    @*<div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                    @*<div class="form-group">
                        @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                    @*<div class="form-group">
                        @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Comments, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                    <div class="form-group">
                        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
	                    <div class="col-md-offset-2 col-md-10">
							<input type="submit" name="Calculate" value="Calculate" class="btn btn-default" />
		                    <input type="submit" name="Book" value="Booking" class="btn btn-default"/>
	                    </div>
                    </div>
                </div>
                <div class="col-lg-7 visible-lg">
                    <div id="map"></div>
                </div>
            </div>
        </div>

        <script>
            function initMap() {
                var mapDiv = document.getElementById('map');
                var mapOptions = {
                    // How zoomed in you want the map to start at (always required)
                    zoom: 11,

                    // The latitude and longitude to center the map (always required)
                    center: new google.maps.LatLng(51.4569511, -2.606284), // New York

                    // How you would like to style the map.
                    // This is where you would paste any style found on Snazzy Maps.
                    styles: [{ "featureType": "all", "elementType": "labels.text.fill", "stylers": [{ "saturation": 36 }, { "color": "#000000" }, { "lightness": 40 }] }, { "featureType": "all", "elementType": "labels.text.stroke", "stylers": [{ "visibility": "on" }, { "color": "#000000" }, { "lightness": 16 }] }, { "featureType": "all", "elementType": "labels.icon", "stylers": [{ "visibility": "off" }] }, { "featureType": "administrative", "elementType": "geometry.fill", "stylers": [{ "color": "#000000" }, { "lightness": 20 }] }, { "featureType": "administrative", "elementType": "geometry.stroke", "stylers": [{ "color": "#000000" }, { "lightness": 17 }, { "weight": 1.2 }] }, { "featureType": "landscape", "elementType": "geometry", "stylers": [{ "color": "#000000" }, { "lightness": 20 }] }, { "featureType": "poi", "elementType": "geometry", "stylers": [{ "color": "#000000" }, { "lightness": 21 }] }, { "featureType": "road.highway", "elementType": "geometry.fill", "stylers": [{ "color": "#000000" }, { "lightness": 17 }] }, { "featureType": "road.highway", "elementType": "geometry.stroke", "stylers": [{ "color": "#000000" }, { "lightness": 29 }, { "weight": 0.2 }] }, { "featureType": "road.arterial", "elementType": "geometry", "stylers": [{ "color": "#000000" }, { "lightness": 18 }] }, { "featureType": "road.local", "elementType": "geometry", "stylers": [{ "color": "#000000" }, { "lightness": 16 }] }, { "featureType": "transit", "elementType": "geometry", "stylers": [{ "color": "#000000" }, { "lightness": 19 }] }, { "featureType": "water", "elementType": "geometry", "stylers": [{ "color": "#000000" }, { "lightness": 17 }] }]
                };
                var map = new google.maps.Map(mapDiv, mapOptions);
            }
        </script>
		@*<script src="https://maps.googleapis.com/maps/api/js?callback=initMap"
				async defer></script>*@
        @*<script async defer
			src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAPvZh2dox0FbQJ7WrhcQ4xo8IQ3kp_XrE&callback=initMap">
	</script>*@
        <div>
            @Html.ActionLink("Back", "Index")
        </div>
    </div>
}

<!-- footer start (Add "dark" class to #footer in order to enable dark footer) -->
<!-- ================ -->
<footer id="footer" class="clearfix dark">
	<!-- .footer start -->
	<!-- ================ -->
	<div class="footer">
		<div class="container">
			<div class="footer-inner">
				<div class="row">
					<div class="col-md-12">
						<div class="footer-content">
							@*<div class="logo-footer"><img id="logo-footer" src="~/Content/Images/logo_orange.png" alt=""></div>*@
							<div class="row">
								<div class="col-md-4">
									<p></p>
									@*<ul class="social-links circle animated-effect-1">

											<li class="twitter"><a target="_blank" href="http://www.twitter.com"><i class="fa fa-twitter"></i></a></li>
											<li class="googleplus"><a target="_blank" href="http://plus.google.com"><i class="fa fa-google-plus"></i></a></li>

											<li class="xing"><a target="_blank" href="http://www.xing.com"><i class="fa fa-xing"></i></a></li>

											<li class="youtube"><a target="_blank" href="https://www.youtube.com"><i class="fa fa-youtube"></i></a></li>
										</ul>*@
									<ul class="list-icons">
										<li><i class="fa fa-map-marker pr-10 text-default"></i> One infinity loop, 54100</li>
										<li><i class="fa fa-phone pr-10 text-default"></i> +00 1234567890</li>
										<li><a href="mailto:info@theproject.com"><i class="fa fa-envelope-o pr-10"></i>info@theproject.com</a></li>
									</ul>
								</div>
								<div class="col-md-8">
									<div class="background-custom">
										<div class="car-background">
											
										</div>
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
	<!-- .footer end -->
	<!-- .subfooter start -->
	<!-- ================ -->
	<div class="subfooter">
		<div class="container">
			<div class="subfooter-inner">
				<div class="row">
					<div class="col-md-12">
						<p class="text-center">Copyright © 2015 The Project by <a target="_blank" href="http://htmlcoder.me">HtmlCoder</a>. All Rights Reserved</p>
					</div>
				</div>
			</div>
		</div>
	</div>
	<!-- .subfooter end -->
</footer>
<!-- footer end -->

