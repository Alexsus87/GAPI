@using System.Net.Mime
@model BritishCab.Models.Booking
<div style="background-color: #696E6F">
	<div class="container">
		@using (Html.BeginForm("FinalizeBooking", "Home",
		FormMethod.Post, new { @class = "booking-form" }))
		{
			@Html.AntiForgeryToken()

			<div class="form-horizontal">
				<h3 class="title" style="margin-top: 20px; color:white">Finalize Booking</h3>
				<div class="separator-2"></div>
				<div class="row">
					<div class="col-lg-7">
						@Html.ValidationSummary(true, "", new { @class = "text-danger" })
						@Html.HiddenFor(model => model.BookingId)
						@Html.HiddenFor(model => model.DriverActualDepartureTime)
						@Html.HiddenFor(model => model.PickUpDateTime)
						@Html.HiddenFor(model => model.PickUpLocation)
						@Html.HiddenFor(model => model.DropLocation)
						@Html.HiddenFor(model => model.Price)
						@Html.HiddenFor(model => model.TransferTime)
						@Html.HiddenFor(model => model.TotalTime)

						<div class="form-group">
							@Html.LabelFor(model => model.PickUpLocation, htmlAttributes: new { @class = "control-label col-md-4 col-sm-3 col-xs-5" })
							<div class="col-md-6 display-string">
								@Html.DisplayFor(model => model.PickUpLocation, new { htmlAttributes = new { @class = "form-control col-xs-offset-3", id = "start", required = "required" } })
								@Html.ValidationMessageFor(model => model.PickUpLocation, "", new { @class = "text-danger" })
							</div>
						</div>

						<div class="form-group">
							@Html.LabelFor(model => model.DropLocation, htmlAttributes: new { @class = "control-label col-md-4 col-sm-3 col-xs-5" })
							<div class="col-md-6 display-string">
								@Html.DisplayFor(model => model.DropLocation, new { htmlAttributes = new { @class = "form-control", id = "end", required = "required" } })
								@Html.ValidationMessageFor(model => model.DropLocation, "", new { @class = "text-danger" })
							</div>
						</div>

						<div class="form-group">
							@Html.LabelFor(model => model.PickUpDateTime, htmlAttributes: new { @class = "control-label col-md-4 col-sm-3 col-xs-5" })
							<div class="col-md-6 display-string">
								@Html.DisplayFor(model => model.PickUpDateTime, new { htmlAttributes = new { @class = "form-control", id = "datetimepicker", placeholder = "Choose pich up time", required = "required" } })
								@Html.ValidationMessageFor(model => model.PickUpDateTime, "", new { @class = "text-danger" })
							</div>
						</div>

						<div class="form-group">
							@Html.LabelFor(model => model.TransferTime, htmlAttributes: new { @class = "control-label col-md-4 col-sm-3 col-xs-5" })
							<div class="col-md-6 display-string">
								@Html.DisplayFor(model => model.TransferTime, new { htmlAttributes = new { @class = "form-control" } })
								@Html.ValidationMessageFor(model => model.TransferTime, "", new { @class = "text-danger" })
							</div>
						</div>

						<div class="form-group">
							@Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-4 col-sm-3 col-xs-5" })
							<div class="col-md-6 display-string">
								@Html.DisplayFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
								@Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
							</div>
						</div>

						<div class="form-group">
							@Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-4 col-sm-3 col-xs-5" })
							<div class="col-md-6">
								@Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control", required = "required" } })
								@Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
							</div>
						</div>

						<div class="form-group">
							@Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-4 col-sm-3 col-xs-5" })
							<div class="col-md-6">
								@Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", required = "required" } })
								@Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
							</div>
						</div>

						<div class="form-group">
							@Html.LabelFor(model => model.PickUpAddress, htmlAttributes: new { @class = "control-label col-md-4 col-sm-3 col-xs-5" })
							<div class="col-md-6">
								@Html.EditorFor(model => model.PickUpAddress, new { htmlAttributes = new { @class = "form-control", required = "required" } })
								@Html.ValidationMessageFor(model => model.PickUpAddress, "", new { @class = "text-danger" })
							</div>
						</div>

						<div class="form-group">
							@Html.LabelFor(model => model.DropAddress, htmlAttributes: new { @class = "control-label col-md-4 col-sm-3 col-xs-5" })
							<div class="col-md-6">
								@Html.EditorFor(model => model.DropAddress, new { htmlAttributes = new { @class = "form-control", required = "required" } })
								@Html.ValidationMessageFor(model => model.DropAddress, "", new { @class = "text-danger" })
							</div>
						</div>
                        
					    <div class="form-group">
					        @Html.LabelFor(model => model.NumberOfPassengers, htmlAttributes: new { @class = "control-label col-md-4 col-sm-3 col-xs-5" })
					        <div class="col-md-6">
					            @Html.DropDownListFor(model => model.NumberOfPassengers, Enumerable.Range(1,3).Select(i => new SelectListItem{Text = i.ToString(), Value = i.ToString()}), new { @class = "form-control", required = "required" })
					            @Html.ValidationMessageFor(model => model.NumberOfPassengers, "", new { @class = "text-danger" })
					        </div>
					    </div>
                        
                        <div class="form-group">
                            @Html.LabelFor(model => model.NumberOfLuggage, htmlAttributes: new { @class = "control-label col-md-4 col-sm-3 col-xs-5" })
                            <div class="col-md-8">
                                @Html.DropDownListFor(model => model.NumberOfLuggage, Enumerable.Range(0, 4).Select(i => new SelectListItem { Text = i.ToString(), Value = i.ToString() }), new { @class = "form-control", required = "required" })
                                @Html.ValidationMessageFor(model => model.NumberOfLuggage, "", new { @class = "text-danger" })
                            </div>
                        </div>

					    <div class="form-group">
							@Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label col-md-4 col-sm-3 col-xs-5" })
							<div class="col-md-6">
								@Html.TextAreaFor(model => model.Comments, new { @class = "form-control", @rows="3" })
								@Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
							</div>
						</div>

						<div class="form-group">
							<div class="col-md-offset-5 col-md-10 col-sm-offset-4 col-xs-offset-4">
								<input type="submit" name="submit" value="Submit" class="btn btn-default" />
							</div>
						</div>


					</div>
					<div class="col-lg-7 visible-lg">
						<div id="map"></div>
					</div>
				</div>
			</div>

		}
	</div>
</div>